[{"path":[]},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team sid04@student.ubc.ca. project team review investigate complaints, respond way deems appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct copied tidyverse Code Conduct, adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution","title":"Contribution","text":"welcome input contributions. outlines propose change rWinePredictor. Submissions accepted Project’s license.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CONTRIBUTING.html","id":"conduct","dir":"","previous_headings":"","what":"Conduct","title":"Contribution","text":"Contributors must follow project code conduct. contributing, accepted terms code conduct. must also noted input contributions confidential.","code":""},{"path":[]},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CONTRIBUTING.html","id":"creating-a-branch","dir":"","previous_headings":"Workflow","what":"Creating a Branch","title":"Contribution","text":"local environment --date, can create new git branch contain changes. Create new branch instead making changes main branch:","code":"git switch -c <your-branch-name>"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CONTRIBUTING.html","id":"creating-a-pull-request","dir":"","previous_headings":"Workflow","what":"Creating a Pull Request","title":"Contribution","text":"done changes, commit branch: , submit pull request GitHub asking merge example branch main repository.","code":"git add <file-name> git commit -m \"Description about changes\" git push origin <your-branch-name>"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CONTRIBUTING.html","id":"pull-requests-and-issues","dir":"","previous_headings":"","what":"Pull requests and Issues","title":"Contribution","text":"make substantial pull request, issue filed agreed upon team member. Typos bugs also submitted via issue. Add clear description pull request submission. applicable, create Git branch pull request order maintain organization. strict style guide project, aim readability uniformity.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contribution","text":"Altair. dplyr.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 rWinePredictor authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/articles/rWinePredictor-vignette.html","id":"welcome-to-rwinepredictor","dir":"Articles","previous_headings":"","what":"Welcome to rWinePredictor!","title":"rWinePredictor-vignette","text":"rWinePredictor package designed assist building testing binary classification models. originally created predict wine quality using wine properties, package can used classification models. functions included allow users : Conduct EDA grouped classes target factor Create tailored line plots Calculate model statistics (accuracy, precision, recall) quickly easily get started, load packages rWinePredictor dplyr:","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(rWinePredictor)"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/articles/rWinePredictor-vignette.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"rWinePredictor-vignette","text":"original dataset used analysis wine quality can found . However, emphasize universal usage package, use mtcars dataset vignette. binary classification problem, first identify target fetaure (case, number cylinders), filter 4 6 cyclinder cars, drop car name index factor features, convert cyclinder column factor.","code":"df <- mtcars %>%   filter(cyl < 8) %>%   select(mpg, cyl, disp, hp, drat, wt, qsec) %>%   mutate(cyl = as.factor(cyl))  rownames(df) <- NULL  head(df) #>    mpg cyl  disp  hp drat    wt  qsec #> 1 21.0   6 160.0 110 3.90 2.620 16.46 #> 2 21.0   6 160.0 110 3.90 2.875 17.02 #> 3 22.8   4 108.0  93 3.85 2.320 18.61 #> 4 21.4   6 258.0 110 3.08 3.215 19.44 #> 5 18.1   6 225.0 105 2.76 3.460 20.22 #> 6 24.4   4 146.7  62 3.69 3.190 20.00"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/articles/rWinePredictor-vignette.html","id":"generate_summary_stats","dir":"Articles","previous_headings":"","what":"generate_summary_stats","title":"rWinePredictor-vignette","text":"part EDA, may want get number 4 6 cylinder cars dataset along mean values feature cyclinder class. , can use generate_summary_stats seen : resulting summary table provides us insight dataset. can see grouped classes specified target column, counted observations (count) proceeded calculate mean features cylinder classes.","code":"eda <- generate_summary_stats(df, cyl) eda #> # A tibble: 2 × 9 #>   cyl   count percentage mpg_avg disp_avg hp_avg drat_avg wt_avg qsec_avg #>   <fct> <int>      <dbl>   <dbl>    <dbl>  <dbl>    <dbl>  <dbl>    <dbl> #> 1 4        11       61.1    26.7     105.   82.6     4.07   2.29     19.1 #> 2 6         7       38.9    19.7     183.  122.      3.59   3.12     18.0"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/articles/rWinePredictor-vignette.html","id":"create_lineplot","dir":"Articles","previous_headings":"","what":"create_lineplot","title":"rWinePredictor-vignette","text":"function initially built compare accuracies across different k values K-NN model. However, many purposes can used plot numerical value y-axis continuous numerical value, like time x-axis. Using toy dataframe create_lineplot, can plot accuracy k-value.","code":"acc_k <- data.frame(   acc = c(0.6, 0.75, 0.73, 0.7, 0.68, 0.62),   k_val = c(1, 6, 11, 16, 21, 26))  lp <- create_lineplot(acc_k, k_val, acc)  lp"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/articles/rWinePredictor-vignette.html","id":"calculate_model_metric","dir":"Articles","previous_headings":"","what":"calculate_model_metric","title":"rWinePredictor-vignette","text":"constructing binary classification model, users may want calculate either accuracy, precision, recall. Using calculate_model_metric makes easy quick. demonstrate, use two class dataset parsnip package. scatterplot, can see correlation width injuries. However, correlation seem strong. Despite small correlation, create linear regression model using width predictor injuries target. , can use function fit_linear_model. document highlighted functions rWinePredictor package. now set use package analysis.","code":"library(yardstick)  preds_df = yardstick::two_class_example  accuracy <- calculate_model_metric(preds_df, truth_col='truth', predictions_col='predicted', metric=\"accuracy\") precision <- calculate_model_metric(preds_df, truth_col='truth', predictions_col='predicted', metric=\"precision\") recall <- calculate_model_metric(preds_df, truth_col='truth', predictions_col='predicted', metric=\"recall\")  paste(\"Accuracy = \", accuracy) #> [1] \"Accuracy =  0.838\" paste(\"Precision = \", precision) #> [1] \"Precision =  0.819494584837545\" paste(\"Recall = \", recall) #> [1] \"Recall =  0.87984496124031\""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sid Ahuja. Author, maintainer.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ahuja S (2024). rWinePredictor: Helps performing binary classification analysis. R package version 0.0.1, https://dsci-310-2024.github.io/rWinePredictor/, https://github.com/sidahuja1/rWinePredictor.","code":"@Manual{,   title = {rWinePredictor: Helps with performing binary classification analysis},   author = {Sid Ahuja},   year = {2024},   note = {R package version 0.0.1, https://dsci-310-2024.github.io/rWinePredictor/},   url = {https://github.com/sidahuja1/rWinePredictor}, }"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/index.html","id":"rwinepredictor","dir":"","previous_headings":"","what":"Helps with performing binary classification analysis","title":"Helps with performing binary classification analysis","text":"goal rWinePredictor provide functions may useful building classifiers. package originally inteded wine quality classifier based physical chemical properties wine functions package can used models.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/index.html","id":"functions-included","dir":"","previous_headings":"","what":"Functions included","title":"Helps with performing binary classification analysis","text":"generate_summary_stats: Groups input data factors target variable summarizes counts means class across parameters dataset. create_lineplot: Creates line plot data points (scatter plot + line plot) option include axis titles plot title. calculate_model_metrics: Calculates specified model metric (e.g., accuracy, precision, recall) given set predictions ground truth values.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/index.html","id":"place-within-the-r-package-ecosystem","dir":"","previous_headings":"","what":"Place within the R package ecosystem","title":"Helps with performing binary classification analysis","text":"rWinePredictor similar R packages away long codeblocks streamlines process building classification models. Firstly, generate_summary_stats uses dplyr’s group_by summarize calculates mean columns set facts target column. elegant easy--use solution EDA. Additionally, create_lineplot built using ggplot2 also creates line plots simple manner, user just specify dataset, x y columns, whether include title . Lastly, calculate_model_metrics allows users quickly assess models; built using parsnip allows easy solution users want benchmark models quickly.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helps with performing binary classification analysis","text":"can install development version rWinePredictor GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"DSCI-310-2024/rWinePredictor\")"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Helps with performing binary classification analysis","text":"dataset may look like : can import package begin EDA generating summary data grouped classes target variable dataset using rWinePredictor::generate_summary_stats() building model, likely tune hyperparamters. package function generating scatter plots connecting lines find ideal hyperparamter value. example might set accuracies given k values K-NN model. Using rWinePredictor::create_lineplot(), can plot values.  Lastly, different model metrics can easily calculated using rWinePredictor::calculate_model_metric().","code":"df <- data.frame(   quality = c('good', 'bad', 'good'),   alcohol = c(10, 12, 14),   sugars = c(1.5, 20, 7.7),   pH = c(3.3, 4, 2.9),   stringsAsFactors = TRUE ) library(rWinePredictor)  generate_summary_stats(df, quality) #> # A tibble: 2 × 6 #>   quality count percentage alcohol_avg sugars_avg pH_avg #>   <fct>   <int>      <dbl>       <dbl>      <dbl>  <dbl> #> 1 bad         1       33.3          12       20      4   #> 2 good        2       66.7          12        4.6    3.1 acc_k <- data.frame(   acc = c(0.6, 0.75, 0.73, 0.7, 0.68, 0.62),   k_val = c(1, 6, 11, 16, 21, 26))  plt <- create_lineplot(acc_k, k_val, acc)  plot(plt) library(yardstick)  model_df = yardstick::two_class_example  accuracy <- calculate_model_metric(model_df, truth_col='truth', predictions_col='predicted', metric=\"accuracy\")  accuracy #> [1] 0.838"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/calculate_model_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a specified model metric — calculate_model_metric","title":"Calculate a specified model metric — calculate_model_metric","text":"function calculates specified model metric (e.g., accuracy, precision, recall) given set predictions ground truth values.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/calculate_model_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a specified model metric — calculate_model_metric","text":"","code":"calculate_model_metric(   predictions,   truth_col = \"\",   predictions_col = \"\",   metric = \"\" )"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/calculate_model_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a specified model metric — calculate_model_metric","text":"predictions data frame tibble containing model predictions truth_col vector containing ground truth values predictions_col vector containing prediction values metric metric calculate (e.g., \"accuracy\", \"precision\", \"recall\")","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/calculate_model_metric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a specified model metric — calculate_model_metric","text":"calculated value specified metric","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/calculate_model_metric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a specified model metric — calculate_model_metric","text":"","code":"df = yardstick::two_class_example calculate_model_metric(df, \"truth\", \"predicted\", \"accuracy\") #> [1] 0.838"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/create_lineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Lineline — create_lineplot","title":"Creates a Lineline — create_lineplot","text":"Creates ggplot lineplot scatterplot points two numerical columns provided dataset. Plot includes x y axis labels optional title. Font size adjustable. X axis values repeat monotomic unique valued.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/create_lineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Lineline — create_lineplot","text":"","code":"create_lineplot(   df,   x,   y,   x_lab = \"\",   y_lab = \"\",   title = FALSE,   font_size = 12 )"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/create_lineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Lineline — create_lineplot","text":"df data frame tibble x montomic numerical column series within df x-axis y numerical column within df y-axis x_lab string x-axis label required. Default \"\" (axis label). y_lab string y-axis label required. Default \"\" (axis label). title boolean response title included. Title concatenation axis labels. Default FALSE font_size Size font used lineplot. Default 12.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/create_lineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a Lineline — create_lineplot","text":"ggplot lineplot points. lineplot points corresponding coordinates continuous numerical columns inputted funtion. line pass points. x y axis labels show label specified. title concatenation axis labels set TRUE.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/create_lineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Lineline — create_lineplot","text":"","code":"data = data.frame(\"time\" = c(0.2, 0.4, 0.8, 1.6, 3.2), \"height\" = c(0, 15, 30, 45, 60)) create_lineplot(df = data, x = time, y = height,                  x_lab = \"time\", y_lab = \"height\",                  title = TRUE, font_size = 13)"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/generate_summary_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Summary Statistics — generate_summary_stats","title":"Generate Summary Statistics — generate_summary_stats","text":"Groups input data one input variable generates following metrics: Observation Count, Group percentage observations, Mean averages included variables.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/generate_summary_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Summary Statistics — generate_summary_stats","text":"","code":"generate_summary_stats(data, group_var)"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/generate_summary_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Summary Statistics — generate_summary_stats","text":"data Input data frame, data frame extension (eg: tibble). REQUIRES: NULL variables group_var String containing name variable group .","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/generate_summary_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Summary Statistics — generate_summary_stats","text":"data frame n + 2 columns, n number columns input data frame. first column (group_var) Contains unique values group data. (see group_by() dplyr function) second column (count) lists number observations class input data frame. third column (percentage) depicts percentage original observations represented said row. subsequent columns mean averages respective original variables.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/generate_summary_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Summary Statistics — generate_summary_stats","text":"","code":"df = data.frame(\"x\" = c(0.2, 0.4, 0.8, 1.6, 3.2),   \"var\" = c(\"a\",\"b\", \"a\", \"b\", \"a\")) generate_summary_stats (data = df, group_var = \"var\") #> Warning: There was 1 warning in `dplyr::summarize()`. #> ℹ In argument: `dplyr::across(!c(count, percentage), .fns = mean, .names = #>   \"{.col}_avg\")`. #> ℹ In group 1: `\"var\" = \"var\"`. #> Caused by warning in `mean.default()`: #> ! argument is not numeric or logical: returning NA #> # A tibble: 1 × 5 #>   `\"var\"` count percentage x_avg var_avg #>   <chr>   <int>      <dbl> <dbl>   <dbl> #> 1 var         5        100  1.24      NA"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://dsci-310-2024.github.io/rWinePredictor/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
